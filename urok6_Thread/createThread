import java.io.IOException;

class MyThread extends Thread {
  @Override
  public void run() {
    for (int i = 1; i <= 100; i++) {
      System.out.println(getName() + " " + i);
    }
  }
}

class MySuperThread implements Runnable {
  @Override
  public void run() {
    for (int i = 1; i <= 100; i++) {
      System.out.println(Thread.currentThread().getName() + " " + i);
    }
  }
}

public class main {
  public static void main (String [] args) throws IOException {
    MyThread t0 = new MyThread();
    MyThread t1 = new MyThread();
    Thread t2 = new Thread(new MySuperThread());
    Thread t3 = new Thread(
        new Runnable() {
          @Override
          public void run() {
            for (int i = 1; i <= 100; i++) {
              System.out.println(Thread.currentThread().getName() + " " + i);
            }
          }
        });

    Thread t4 = new Thread(
          () -> {
            for (int i = 1; i <= 100; i++) {
              System.out.println(Thread.currentThread().getName() + " " + i);
            }
          }
        );

// через наследник Thread
    t0.start();
    t1.start();
// через интерфейс Runnable
    t2.start();
// через анонимный класс
    t3.start();
// через лямбда выражение
    t4.start();
  }
}
